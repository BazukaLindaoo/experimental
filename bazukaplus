local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer
local loopKill = false
local loopTarget = nil

-- UI Rayfield
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Window = Rayfield:CreateWindow({
   Name = "KitKat Hub - Painel",
   LoadingTitle = "Carregando...",
   LoadingSubtitle = "Rayfield UI",
   ConfigurationSaving = {Enabled = false},
   KeySystem = false
})

local Tab = Window:CreateTab("Funções", 4483362458)

-- Dropdown para selecionar player
local function atualizarListaJogadores()
   local nomes = {}
   for _,plr in ipairs(Players:GetPlayers()) do
      if plr ~= localPlayer then
         table.insert(nomes, plr.Name)
      end
   end
   return nomes
end

local selectedPlayer = nil
local PlayerDropdown = Tab:CreateDropdown({
   Name = "Selecionar Player",
   Options = atualizarListaJogadores(),
   CurrentOption = {},
   MultipleOptions = false,
   Flag = "SelecionarPlayer",
   Callback = function(option)
      selectedPlayer = option[1]
   end,
})
Players.PlayerAdded:Connect(function() PlayerDropdown:Set(atualizarListaJogadores()) end)
Players.PlayerRemoving:Connect(function() PlayerDropdown:Set(atualizarListaJogadores()) end)

-- Kill Player
Tab:CreateButton({
   Name = "Kill Player",
   Callback = function()
      if selectedPlayer then
         local plr = Players:FindFirstChild(selectedPlayer)
         if plr and plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") then
            plr.Character:FindFirstChildOfClass("Humanoid").Health = 0
         end
      end
   end
})

-- LoopKill Player
Tab:CreateToggle({
   Name = "LoopKill Player",
   CurrentValue = false,
   Flag = "LoopKillSel",
   Callback = function(state)
      if state and selectedPlayer then
         loopKill = true
         loopTarget = selectedPlayer
         task.spawn(function()
            while loopKill do
               task.wait(1)
               local plr = Players:FindFirstChild(loopTarget)
               if plr and plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") then
                  plr.Character:FindFirstChildOfClass("Humanoid").Health = 0
               end
            end
         end)
      else
         loopKill = false
         loopTarget = nil
      end
   end
})

-- Kick Player
Tab:CreateButton({
   Name = "Kick Player",
   Callback = function()
      if selectedPlayer then
         local plr = Players:FindFirstChild(selectedPlayer)
         if plr and plr == localPlayer then
            localPlayer:Kick("Você foi expulso.")
         end
      end
   end
})

-- Bring Player
Tab:CreateButton({
   Name = "Bring Player",
   Callback = function()
      if selectedPlayer then
         local plr = Players:FindFirstChild(selectedPlayer)
         if plr and plr.Character and localPlayer.Character then
            local initiatorHRP = localPlayer.Character:FindFirstChild("HumanoidRootPart")
            local targetHRP = plr.Character:FindFirstChild("HumanoidRootPart")
            if initiatorHRP and targetHRP then
               targetHRP.CFrame = initiatorHRP.CFrame + Vector3.new(0,2,0)
            end
         end
      end
   end
})

-- Shutdown servidor (Lag FireX)
local toggles = { LagFireX = false }
local VirtualUser = game:GetService("VirtualUser")

local function clickNormally(object)
   local clickDetector = object:FindFirstChildWhichIsA("ClickDetector")
   if clickDetector then
      fireclickdetector(clickDetector)
   end
end

local function lagarJogoFireX(fireXPath, maxTeleports)
   if fireXPath then
      local teleportCount = 0
      local connection
      connection = RunService.Heartbeat:Connect(function()
         if not toggles.LagFireX or teleportCount >= maxTeleports then
            connection:Disconnect()
            return
         end
         game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = fireXPath.CFrame
         clickNormally(fireXPath)
         teleportCount = teleportCount + 1
      end)

      task.delay(300, function()
         if toggles.LagFireX then
            toggles.LagFireX = false
            connection:Disconnect()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0, 900000, 0)

            RunService.Heartbeat:Connect(function()
               VirtualUser:CaptureController()
               VirtualUser:ClickButton1(Vector2.new(500, 500))
            end)
         end
      end)
   else
      warn("FireX não encontrado.")
   end
end

Tab:CreateToggle({
   Name = "Shutdown Servidor",
   CurrentValue = false,
   Flag = "ShutdownServ",
   Callback = function(state)
      toggles.LagFireX = state
      if state then
         local fireXPath = workspace:FindFirstChild("WorkspaceCom")
            and workspace.WorkspaceCom:FindFirstChild("001_GiveTools")
            and workspace.WorkspaceCom["001_GiveTools"]:FindFirstChild("FireX")

         if fireXPath then
            lagarJogoFireX(fireXPath, 999999999)
         else
            warn("FireX não encontrado.")
         end
      else
         print("Shutdown Servidor desativado.")
      end
   end
})
